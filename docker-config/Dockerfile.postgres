# Utilise l'image officielle PostgreSQL en version alpine
FROM postgres:15.2-alpine

# Déclaration des arguments de build
ARG POSTGRES_DB
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG PSQL_USERNAME
ARG PSQL_PASSWORD

# Définit les variables d'environnement pour la configuration de PostgreSQL
ENV PGDATA=/var/lib/postgresql/data/guacamole \
    POSTGRES_DB=$POSTGRES_DB \
    POSTGRES_USER=$POSTGRES_USER \
    POSTGRES_PASSWORD=$POSTGRES_PASSWORD

# Copie le script d'initialisation SQL dans l'image
COPY initdb.sql /tmp/init.sql

USER postgres

# Lance PostgreSQL en arrière-plan, attend qu'il soit prêt, puis exécute le script d'initialisation SQL
RUN /usr/local/bin/docker-entrypoint.sh postgres & \
    timeout=5; i=0; \
    until pg_isready -h localhost -p 5432 || [ $i -ge $timeout ]; do \
        echo "Attente de PostgreSQL... ($i/$timeout)"; \
        sleep 1; \
        i=$((i+1)); \
    done; \
    if ! pg_isready -h localhost -p 5432; then \
        echo "Erreur : PostgreSQL n'est pas prêt après ${timeout} secondes" >&2; \
        exit 1; \
    fi; \
    psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -v username="$PSQL_USERNAME" -v password="$PSQL_PASSWORD" -f /tmp/init.sql && \
    pkill postgres

# Retour à l'utilisateur root (UID 0)
USER 0
